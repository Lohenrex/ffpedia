---
http_interactions:
- request:
    method: get
    uri: https://www.moogleapi.com/api/v1/games
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.moogleapi.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 28 Dec 2021 23:09:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '14081'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Request-Context:
      - appId=cid-v1:a44d0651-3c25-4ba9-874e-02b519cfb8ae
      Strict-Transport-Security:
      - max-age=2592000
      Api-Supported-Versions:
      - '1'
      X-Powered-By:
      - ASP.NET
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=XyaIFCrvooMJ3HvzUFvczJntDGCHmYf3IKf%2BOrmK%2F676nCustif2NE1yJhB%2FneAR0ahr92jEW9orwLTnI%2BMYIQw%2BYBVEVdkwuLyiU0oCVI3lGzqtUuA0aiHohRxYONl8O7mDtw%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 6c4e74cf78a7b314-MEX
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400, h3-28=":443"; ma=86400, h3-27=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 28 Dec 2021 23:09:26 GMT
recorded_with: VCR 6.0.0
